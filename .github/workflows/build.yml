name: build obs plugin

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  PLUGIN_NAME: move-transition

jobs:
  macos64:
    name: "macOS 64-bit"
    runs-on: [macos-latest]
    env:
      QT_VERSION: 5.14.1
      OSX_DEPS_VERSION: '2020-04-07'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: obsproject/obs-studio
          submodules: 'recursive'
      - name: "Checkout obs-move-transition"
        uses: actions/checkout@v2
        with:
          path: plugins/${{ env.PLUGIN_NAME }}
      - name: Fetch Git Tags
        run: |
          cd plugins/${{ env.PLUGIN_NAME }}
          git fetch --prune --tags --unshallow
      - name: 'Install prerequisites (Homebrew)'
        shell: bash
        run: |
          cd plugins/${{ env.PLUGIN_NAME }}/CI/macos
          brew bundle
          cd -
      - name: 'Install prerequisite: Pre-built dependencies'
        shell: bash
        run: |
          curl -L -O https://github.com/obsproject/obs-deps/releases/download/${{ env.OSX_DEPS_VERSION }}/osx-deps-${{ env.OSX_DEPS_VERSION }}.tar.gz
          tar -xf ./osx-deps-${{ env.OSX_DEPS_VERSION }}.tar.gz -C "/tmp"
      - name: Configure
        shell: bash
        run: |
          echo "add_subdirectory(${{ env.PLUGIN_NAME }})" >> plugins/CMakeLists.txt
          mkdir ./build
          cd ./build
          cmake -DCMAKE_OSX_DEPLOYMENT_TARGET=10.11 -DDepsPath="/tmp/obsdeps" -DQTDIR="/usr/local/Cellar/qt/${{ env.QT_VERSION }}" ..
          cd -
      - name: Build
        shell: bash
        run: |
          set -e
          cd ./build
          make -j4
          cd -
      - name: 'Install prerequisite: Packages app'
        if: success()
        shell: bash
        run: |
          curl -L -O https://s3-us-west-2.amazonaws.com/obs-nightly/Packages.pkg
          sudo installer -pkg ./Packages.pkg -target /
      - name: Package
        if: success()
        shell: bash
        run: |
          cd plugins/${{ env.PLUGIN_NAME }}
          FILE_DATE=$(date +%Y-%m-%d)
          FILE_NAME=${{ env.PLUGIN_NAME }}-$FILE_DATE-${{ github.sha }}-macos.pkg
          echo "::set-env name=FILE_NAME::${FILE_NAME}"
          packagesbuild ./CI/macos/${{ env.PLUGIN_NAME }}.pkgproj
          cd -
          mkdir ./nightly
          mv plugins/${{ env.PLUGIN_NAME }}/move-transition.pkg ./nightly/${FILE_NAME}
      - name: Publish
        if: success()
        uses: actions/upload-artifact@v2-preview
        with:
          name: '${{ env.FILE_NAME }}'
          path: ./nightly/*.pkg
  win64:
    name: Windows 64-bit
    runs-on: [windows-latest]
    env:
      QT_VERSION: 5.10.1
      CMAKE_GENERATOR: "Visual Studio 16 2019"
      CMAKE_SYSTEM_VERSION: "10.0.18363.657"
    steps:
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.0
      - name: Checkout obs
        uses: actions/checkout@v2
        with:
          repository: obsproject/obs-studio
          submodules: 'recursive'
      - name: Checkout plugin
        uses: actions/checkout@v2
        with:
          path: plugins/${{ env.PLUGIN_NAME}}
      - name: Add plugin to obs cmake
        shell: cmd
        run: echo add_subdirectory(${{ env.PLUGIN_NAME }}) >> plugins/CMakeLists.txt
      - name: Fetch Git Tags
        run: git fetch --prune --tags --unshallow
      - name: 'Install prerequisite: QT'
        run: |
          curl -kLO https://cdn-fastly.obsproject.com/downloads/Qt_${{ env.QT_VERSION }}.7z -f --retry 5 -C -
          7z x Qt_${{ env.QT_VERSION }}.7z -o"${{ github.workspace }}/cmbuild/QT"
      - name: 'Install prerequisite: Pre-built dependencies'
        run: |
          curl -kLO https://cdn-fastly.obsproject.com/downloads/dependencies2017.zip -f --retry 5 -C -
          7z x dependencies2017.zip -o"${{ github.workspace }}/cmbuild/deps"
      - name: Configure
        run: |
          mkdir ./build
          mkdir ./build64
          cd ./build64
          cmake -G"${{ env.CMAKE_GENERATOR }}" -A"x64" -DCMAKE_SYSTEM_VERSION="${{ env.CMAKE_SYSTEM_VERSION }}" -DBUILD_BROWSER=false -DBUILD_CAPTIONS=false -DCOMPILE_D3D12_HOOK=false -DDepsPath="${{ github.workspace }}/cmbuild/deps/win64" -DQTDIR="${{ github.workspace }}/cmbuild/QT/${{ env.QT_VERSION }}/msvc2017_64" -DCOPIED_DEPENDENCIES=FALSE -DCOPY_DEPENDENCIES=TRUE ..
      - name: Build
        run: msbuild /m /p:Configuration=RelWithDebInfo .\build64\obs-studio.sln
      - name: Package
        if: success()
        run: |
          $env:FILE_DATE=(Get-Date -UFormat "%F")
          $env:FILE_NAME="${{ env.PLUGIN_NAME }}-${env:FILE_DATE}-${{ github.sha }}-win64.zip"
          echo "::set-env name=FILE_NAME::${env:FILE_NAME}"
          robocopy .\build64\rundir\RelWithDebInfo\obs-plugins\64bit\ .\build\obs-plugins\64bit ${{ env.PLUGIN_NAME }}.* /E /XF .gitignore
          robocopy .\build64\rundir\RelWithDebInfo\data\obs-plugins\${{ env.PLUGIN_NAME }}\ .\build\data\obs-plugins\${{ env.PLUGIN_NAME }}\ /E /XF .gitignore
          7z a ${env:FILE_NAME} .\build\*
      - name: Publish
        if: success()
        uses: actions/upload-artifact@v2-preview
        with:
          name: '${{ env.FILE_NAME }}'
          path: '*-win64.zip'
  win32:
    name: Windows 32-bit
    runs-on: [windows-latest]
    env:
      QT_VERSION: 5.10.1
      CMAKE_GENERATOR: "Visual Studio 16 2019"
      CMAKE_SYSTEM_VERSION: "10.0.18363.657"
    steps:
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.0
      - name: Checkout obs
        uses: actions/checkout@v2
        with:
          repository: obsproject/obs-studio
          submodules: 'recursive'
      - name: Checkout plugin
        uses: actions/checkout@v2
        with:
          path: plugins/${{ env.PLUGIN_NAME }}
      - name: Add plugin to obs cmake
        shell: cmd
        run: echo add_subdirectory(${{ env.PLUGIN_NAME }}) >> plugins/CMakeLists.txt
      - name: Fetch Git Tags
        run: git fetch --prune --tags --unshallow
      - name: 'Install prerequisite: QT'
        run: |
          curl -kLO https://cdn-fastly.obsproject.com/downloads/Qt_${{ env.QT_VERSION }}.7z -f --retry 5 -C -
          7z x Qt_${{ env.QT_VERSION }}.7z -o"${{ github.workspace }}/cmbuild/QT"
      - name: 'Install prerequisite: Pre-built dependencies'
        run: |
          curl -kLO https://cdn-fastly.obsproject.com/downloads/dependencies2017.zip -f --retry 5 -C -
          7z x dependencies2017.zip -o"${{ github.workspace }}/cmbuild/deps"
      - name: Configure
        run: |
          mkdir ./build
          mkdir ./build32
          cd ./build32
          cmake -G"${{ env.CMAKE_GENERATOR }}" -A"Win32" -DCMAKE_SYSTEM_VERSION="${{ env.CMAKE_SYSTEM_VERSION }}" -DBUILD_BROWSER=false -DBUILD_CAPTIONS=false -DCOMPILE_D3D12_HOOK=false -DDepsPath="${{ github.workspace }}/cmbuild/deps/win32" -DQTDIR="${{ github.workspace }}/cmbuild/QT/${{ env.QT_VERSION }}/msvc2017" -DCOPIED_DEPENDENCIES=FALSE -DCOPY_DEPENDENCIES=TRUE ..
      - name: Build
        run: msbuild /m /p:Configuration=RelWithDebInfo .\build32\obs-studio.sln
      - name: Package
        if: success()
        run: |
          $env:FILE_DATE=(Get-Date -UFormat "%F")
          $env:FILE_NAME="${{ env.PLUGIN_NAME }}-${env:FILE_DATE}-${{ github.sha }}-win32.zip"
          echo "::set-env name=FILE_NAME::${env:FILE_NAME}"
          robocopy .\build32\rundir\RelWithDebInfo\obs-plugins\32bit\ .\build\obs-plugins\32bit ${{ env.PLUGIN_NAME }}.* /E /XF .gitignore
          robocopy .\build32\rundir\RelWithDebInfo\data\obs-plugins\${{ env.PLUGIN_NAME }}\ .\build\data\obs-plugins\${{ env.PLUGIN_NAME }}\ /E /XF .gitignore
          7z a ${env:FILE_NAME} .\build\*
      - name: Publish
        if: success()
        uses: actions/upload-artifact@v2-preview
        with:
          name: '${{ env.FILE_NAME }}'
          path: '*-win32.zip'